// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Reports.Domain;

namespace Reports.Api.Migrations;

[DbContext(typeof(ReportContext))]
[Migration("20210629131217_Init")]
partial class Init
{
    protected override void BuildTargetModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
        modelBuilder
            .HasAnnotation("Relational:MaxIdentifierLength", 128)
            .HasAnnotation("ProductVersion", "6.0.0-preview.2.21154.2")
            .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

        modelBuilder.Entity("Reports.Domain.PictureReport", b =>
            {
                b.Property<Guid>("ReportId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<Guid?>("ActionId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTime>("Date")
                    .HasColumnType("datetime2");

                b.Property<Guid>("PictureId")
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("PictureName")
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnType("nvarchar(100)");

                b.Property<string>("PicturePath")
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnType("nvarchar(255)");

                b.Property<Guid>("UserId")
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("Username")
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar(50)");

                b.HasKey("ReportId");

                b.HasIndex("ActionId");

                b.ToTable("PictureReports");
            });

        modelBuilder.Entity("Reports.Domain.PictureReportInstance", b =>
            {
                b.Property<Guid>("InstanceId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTime>("Date")
                    .HasColumnType("datetime2");

                b.Property<int>("Reason")
                    .HasColumnType("int");

                b.Property<Guid>("ReportId")
                    .HasColumnType("uniqueidentifier");

                b.Property<Guid>("UserId")
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("Username")
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar(50)");

                b.HasKey("InstanceId");

                b.HasIndex("ReportId");

                b.ToTable("PictureReportInstances");
            });

        modelBuilder.Entity("Reports.Domain.ReportAction", b =>
            {
                b.Property<Guid>("ActionId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<int>("ActionTaken")
                    .HasColumnType("int");

                b.Property<DateTime>("Date")
                    .HasColumnType("datetime2");

                b.Property<string>("Notes")
                    .HasMaxLength(500)
                    .HasColumnType("nvarchar(500)");

                b.Property<Guid>("UserId")
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("Username")
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar(50)");

                b.HasKey("ActionId");

                b.ToTable("Actions");
            });

        modelBuilder.Entity("Reports.Domain.UserReport", b =>
            {
                b.Property<Guid>("ReportId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<Guid?>("ActionId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTime>("Date")
                    .HasColumnType("datetime2");

                b.Property<string>("Email")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Name")
                    .HasColumnType("nvarchar(max)");

                b.Property<Guid>("UserId")
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("Username")
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar(50)");

                b.HasKey("ReportId");

                b.HasIndex("ActionId");

                b.ToTable("UserReports");
            });

        modelBuilder.Entity("Reports.Domain.UserReportInstance", b =>
            {
                b.Property<Guid>("InstanceId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTime>("Date")
                    .HasColumnType("datetime2");

                b.Property<int>("Reason")
                    .HasColumnType("int");

                b.Property<Guid>("ReportId")
                    .HasColumnType("uniqueidentifier");

                b.Property<Guid>("UserId")
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("Username")
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar(50)");

                b.HasKey("InstanceId");

                b.HasIndex("ReportId");

                b.ToTable("UserReportInstances");
            });

        modelBuilder.Entity("Reports.Domain.PictureReport", b =>
            {
                b.HasOne("Reports.Domain.ReportAction", "Action")
                    .WithMany()
                    .HasForeignKey("ActionId");

                b.Navigation("Action");
            });

        modelBuilder.Entity("Reports.Domain.PictureReportInstance", b =>
            {
                b.HasOne("Reports.Domain.PictureReport", "PictureReport")
                    .WithMany("Reports")
                    .HasForeignKey("ReportId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("PictureReport");
            });

        modelBuilder.Entity("Reports.Domain.UserReport", b =>
            {
                b.HasOne("Reports.Domain.ReportAction", "Action")
                    .WithMany()
                    .HasForeignKey("ActionId");

                b.Navigation("Action");
            });

        modelBuilder.Entity("Reports.Domain.UserReportInstance", b =>
            {
                b.HasOne("Reports.Domain.UserReport", "UserReport")
                    .WithMany("Reports")
                    .HasForeignKey("ReportId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("UserReport");
            });

        modelBuilder.Entity("Reports.Domain.PictureReport", b =>
            {
                b.Navigation("Reports");
            });

        modelBuilder.Entity("Reports.Domain.UserReport", b =>
            {
                b.Navigation("Reports");
            });
#pragma warning restore 612, 618
    }
}
